import matplotlib.pyplot as plt
import numpy as np
import pytest
from semiempirical_buffet_model import BuffetData, BuffetGeometryParameters, SemiEmpiricalBuffetModel


def compute_sweep_max_thickness_from_sweep_quarter_chord(geom: BuffetGeometryParameters, sweep_quarter_chord: float):
    geom.sweep_max_thickness = np.rad2deg(
        np.arctan(
            np.tan(np.deg2rad(sweep_quarter_chord))
            + 4.0
            / geom.aspect_ratio
            * (geom.taper_ratio - 1.0)
            / (geom.taper_ratio + 1.0)
            * (geom.chord_position_of_max_thickness - 0.25)
        )
    )


def seed_aircraft_geom():
    sweep_quarter_chord = 33.1
    ref_aircraft = BuffetGeometryParameters(
        sweep_max_thickness=-1,
        thickness_to_chord_ratio=0.105,
        camber=0.0110,
        chord_position_of_max_thickness=0.370,
        aspect_ratio=6.81,
        taper_ratio=0.328,
    )
    compute_sweep_max_thickness_from_sweep_quarter_chord(ref_aircraft, sweep_quarter_chord)
    return ref_aircraft


def target_aircraft_geom():
    sweep_quarter_chord = 27.0
    target_aircraft = BuffetGeometryParameters(
        sweep_max_thickness=-1.0,
        thickness_to_chord_ratio=0.130,
        camber=0.0150,
        chord_position_of_max_thickness=0.400,
        aspect_ratio=9.0,
        taper_ratio=0.25,
    )
    compute_sweep_max_thickness_from_sweep_quarter_chord(target_aircraft, sweep_quarter_chord)
    return target_aircraft


def test_example_case_from_paper(plot=False):
    target_3d = np.array(
        [
            [0.3539473423806756, 1.489828735678071],
            [0.3712893812171992, 1.4613246037765981],
            [0.3886314200537227, 1.4356708850652722],
            [0.40693690549227535, 1.4067595512794924],
            [0.42427894432879887, 1.38069863068386],
            [0.4411392598643078, 1.351380095013773],
            [0.45944474530286045, 1.3229777635833768],
            [0.4941288229759075, 1.2661731007225838],
            [0.5109891385114165, 1.2373635674078807],
            [0.5996262258980922, 1.0818124476026991],
            [0.6164865414336013, 1.0481164916763146],
            [0.6347920268721539, 1.017881751766538],
            [0.6521340657086774, 0.9940604415345924],
            [0.6689943812441864, 0.973496746377101],
            [0.6868181433817244, 0.956801469120524],
            [0.7046419055192625, 0.9409205956325604],
            [0.7571497453298477, 0.8822835242923872],
            [0.7744917841663712, 0.846551558944469],
            [0.8101393084414474, 0.7320260289831932],
            [0.827481347277971, 0.6318543654437305],
            [0.8443416628134799, 0.514580222763384],
            [0.47734470158343484, 1.2951351351351352],
            [0.5293544457978075, 1.2064864864864866],
            [0.5464068209500609, 1.180540540540541],
            [0.5643118148599269, 1.1481081081081084],
            [0.5822168087697929, 1.117837837837838],
            [0.7220462850182703, 0.9254054054054057],
            [0.7399512789281364, 0.9081081081081084],
            [0.7928136419001217, 0.795675675675676],
            [0.8635809987819731, 0.40000000000000013],
        ]
    )

    seed_2d = np.array(
        [
            [0.32022671130965763, 1.4655446960321408],
            [0.335641856942123, 1.4417789133298737],
            [0.35202044917661746, 1.421714965939486],
            [0.36743559480908283, 1.4025024406708309],
            [0.40019277927807173, 1.3600794079966905],
            [0.4156079249105371, 1.3393861486032832],
            [0.46281680840996225, 1.2786390311353386],
            [0.494610546276922, 1.2355496681050597],
            [0.5109891385114165, 1.2150401783932065],
            [0.5264042841438819, 1.1942371860244831],
            [0.5427828763783763, 1.1720817016828837],
            [0.5591614686128707, 1.1440625102072666],
            [0.6063703521122958, 1.0989889634498202],
            [0.6217854977447612, 1.0946578161349212],
            [0.6376823666782412, 1.0936620224360256],
            [0.653579235611721, 1.0886238245765574],
            [0.6689943812441864, 1.084392626815079],
            [0.6848912501776663, 1.0770726176693683],
            [0.7169258496951334, 1.0007283723901157],
            [0.7330635802791206, 0.9397397101680708],
            [0.7641829055246601, 0.68845542736237],
            [0.7807541870795602, 0.544602107142728],
            [0.3827040194884287, 1.385945945945946],
            [0.4304506699147381, 1.3232432432432435],
            [0.4466504263093788, 1.303783783783784],
            [0.47819732034104745, 1.2605405405405408],
            [0.5736906211936662, 1.1286486486486489],
            [0.5890377588306942, 1.1113513513513515],
            [0.699878197320341, 1.0551351351351355],
            [0.7484774665042631, 0.8324324324324326],
        ]
    )

    seed_3d = np.array(
        [
            [0.37707006082937367, 1.0593710993120156],
            [0.3948938229669118, 1.0485644137490522],
            [0.4136810317064789, 1.0353914327917284],
            [0.43246824044604604, 1.018339853886383],
            [0.4512554491856132, 1.0014307956405446],
            [0.4695609346241658, 0.9877488123278377],
            [0.5066536288022856, 0.9552541019601584],
            [0.5254408375418528, 0.9418707333626096],
            [0.54422804628142, 0.9236145155495231],
            [0.562051808418958, 0.9087128656404877],
            [0.5813207404595397, 0.8939837917681348],
            [0.5996262258980922, 0.88084474430117],
            [0.618895157938674, 0.8608828030393765],
            [0.674775060856361, 0.8139317794266099],
            [0.7301732404730332, 0.7947676953171785],
            [0.7489604492126005, 0.7898486965547529],
            [0.7682293812531822, 0.7900749198238124],
            [0.7874983132937639, 0.7869094393171205],
            [0.8060446603828237, 0.7793632480338539],
            [0.8236275608698544, 0.7594612559383609],
            [0.8424147696094217, 0.7302614874845306],
            [0.8612019783489888, 0.6788861830811612],
            [0.8799891870885561, 0.6017214260050303],
            [0.8992581191291378, 0.4986088599677967],
            [0.48842874543239945, 0.970810810810811],
            [0.6376370280146162, 0.8475675675675678],
            [0.6555420219244823, 0.8324324324324326],
            [0.6922046285018268, 0.8086486486486488],
            [0.7118148599269183, 0.8021621621621624],
        ]
    )

    seed_aircraft = seed_aircraft_geom()
    target_aircraft = target_aircraft_geom()

    model = SemiEmpiricalBuffetModel()
    mach = np.zeros(seed_3d.shape[0])
    cl = np.zeros(seed_3d.shape[0])
    mach_2d = np.zeros(seed_3d.shape[0])
    cl_2d = np.zeros(seed_3d.shape[0])
    for i in range(seed_3d.shape[0]):

        data0 = BuffetData(geom=seed_aircraft, mach=seed_3d[i, 0], cl=seed_3d[i, 1])
        data_2d_0, data_2d_1 = model._compute_2d_transformed_data(target_aircraft, data0)
        model._compute_2d_buffet_lift_coefficient(target_aircraft, data0, data_2d_0, data_2d_1)
        mach_2d[i] = data_2d_0.mach
        cl_2d[i] = data_2d_0.cl
        mach[i], cl[i] = model.compute_buffet_lift_coefficient(target_aircraft, data0)

    if plot:
        plt.plot(seed_2d[:, 0], seed_2d[:, 1], "+", label="2D seed, from figure 8")
        plt.plot(mach_2d, cl_2d, "x", label="2D seed, computed")

        plt.plot(seed_3d[:, 0], seed_3d[:, 1], "s", label="3D seed, from figure 8")
        plt.plot(target_3d[:, 0], target_3d[:, 1], "v", label="3D target, from figure 8")
        plt.plot(mach, cl, "*", label="3D target, computed")
        plt.legend()
        plt.show()

    else:
        for a, b in zip(mach, target_3d[:, 0]):
            assert a == pytest.approx(b, abs=0.1)

        for a, b in zip(cl, target_3d[:, 1]):
            assert a == pytest.approx(b, abs=0.1)


if __name__ == "__main__":
    test_example_case_from_paper(plot=True)
